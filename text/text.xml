<?xml version="1.0" encoding="UTF-8"?>
<xml3d xmlns="http://www.w3.org/1999/xhtml">

	<data id="config">
		<int name="resolution">32</int>
		<int name="baseline">20</int>
		<int name="fontsize">30</int>
		<string name="text">[[undefined]]</string>
	</data>


	<!-- ///////////////////////////////////////////////////////////////// -->

	<asset id="bitmap-naive">
		<assetdata name="config" compute="dataflow['#gentext']">
			<data src="#config"></data>
		</assetdata>
		<assetmesh type="triangles" material="#shader-diffuse" name="textgeometry" includes="config">
			<float3 name="diffuseColor">0 0.57 0.57</float3>
		</assetmesh>
	</asset>
	
	<dataflow id="gentext" out="position, normal, texcoord, index, diffuseTexture">
		<int name="resolution" param="true" />
		<int name="baseline" param="true" />
		<int name="fontsize" param="true" />
		<string name="text" param="true" />
		<script src="xflow-text.js" name="xflow.text" type="text/javascript"></script>
		<script src="xflow-quad.js" name="xflow.quads2triangles" type="text/javascript"></script>
		<compute>
			position, normal, texcoord, diffuseTexture = xflow.text(resolution, baseline, fontsize, text);
			index = xflow.quads2triangles(position);
		</compute>
	</dataflow>
	
    <material id="shader-diffuse" model="urn:xml3d:shader:diffuse">
		<float3 name="diffuseColor">0 1 0</float3>
		<float name="ambientIntensity">1</float>
		<float name="transparency">0.0</float>
    </material>


	<!-- ///////////////////////////////////////////////////////////////// -->
	
	<asset id="bitmap-alphatest">
		<assetdata name="config" compute="dataflow['#gentext']">
			<data src="#config"></data>
		</assetdata>
		<assetmesh type="triangles" material="#shader-alphatest" name="textgeometry" includes="config">
			<float3 name="diffuseColor">0 0.57 0.57</float3>
		</assetmesh>
	</asset>

	<script id="alphatest-shader-script" type="text/shade-javascript">
	<![CDATA[
		function shade(env) {
			var color = env.diffuseColor || new Vec3(0.5, 0.5, 0.5);
			var alpha = env.diffuseTexture ? env.diffuseTexture.sample2D(env.texcoord).a() : 1.0;

			if (alpha < 0.5) return;

			return Shade.emissive(color);
		}
	]]>
	</script>

    <material id="shader-alphatest" model="#alphatest-shader-script">
        <float3 name="diffuseColor">0 0 1</float3>
    </material>


	<!-- ///////////////////////////////////////////////////////////////// -->
	
	<asset id="bitmap-distancefield">
		<assetdata name="config" compute="dataflow['#gendistfield']">
			<data src="#config"></data>
		</assetdata>
		<assetmesh type="triangles" material="#shader-distancefield" name="textgeometry" includes="config">
			<float3 name="diffuseColor">0 0.57 0.57</float3>
		</assetmesh>
	</asset>

	<dataflow id="gendistfield" out="position, normal, texcoord, index, distfield">
		<int name="resolution" param="true" />
		<int name="baseline" param="true" />
		<int name="fontsize" param="true" />
		<string name="text" param="true" />
		<script src="xflow-text.js" name="xflow.text" type="text/javascript"></script>
		<script src="xflow-distancefield.js" name="xflow.distancefield" type="text/javascript"></script>
		<script src="xflow-quad.js" name="xflow.quads2triangles" type="text/javascript"></script>
		<compute>
			position, normal, texcoord, bitmap = xflow.text(resolution, baseline, fontsize, text);
			distfield = xflow.distancefield(bitmap);
			index = xflow.quads2triangles(position);
		</compute>
	</dataflow>

	<script id="distancefield-shader-script" type="text/shade-javascript">
	<![CDATA[
		function shade(env) {
			var color = env.diffuseColor || new Vec3(0.5, 0.5, 0.5);
			var D = env.distfield ? env.distfield.sample2D(env.texcoord).r() : 1.0;
			// if (D > 0.0) return;
			color = new Vec3(D);
			return Shade.emissive(color);
		}
	]]>
	</script>

    <material id="shader-distancefield" model="#distancefield-shader-script">
        <float3 name="diffuseColor">0 0 1</float3>
    </material>

</xml3d>